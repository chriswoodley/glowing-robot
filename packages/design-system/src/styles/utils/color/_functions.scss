@use "sass:color";
@use "sass:math";
@use "../lang/module" as l;
@use "variables" as v;

/* https://www.w3.org/TR/WCAG22/#dfn-relative-luminance */
@function linear-channel-value($channel) {
  /* stylelint-disable-next-line number-max-precision */
  $linear-cutoff-point: 0.04045;

  @if $channel <= $linear-cutoff-point {
    @return math.div($channel, 12.92);
  }

  @return math.pow(math.div($channel + 0.055, 1.055), 2.4);
}

/* https://www.w3.org/TR/WCAG22/#dfn-relative-luminance */
@function luminance($color) {
  $max-light: 255;
  $r: linear-channel-value(math.div(color.red($color), $max-light));
  $g: linear-channel-value(math.div(color.green($color), $max-light));
  $b: linear-channel-value(math.div(color.blue($color), $max-light));

  @return 0.2126 * $r + 0.7152 * $g + 0.0722 * $b;
}

/* https://www.w3.org/TR/WCAG20/#contrast-ratiodef */
@function contrast-ratio($color1, $color2) {
  $offset: 0.05;
  $l1: luminance($color1) + $offset;
  $l2: luminance($color2) + $offset;

  @return math.div($l1, $l2);
}

@function validate-color-contrast(
  $background,
  $foreground,
  $type: "text",
  $level: "AA",
  $size: "normal"
) {
  $current-ratio: contrast-ratio($background, $foreground);
  $ratio: l.map-deep-get(v.$contrast-ratios, $type, $level, $size);

  @if $current-ratio < $ratio {
    $message: "The color #{$background} and the color #{$foreground} has a contrast ratio of";
    $message: "#{$message} #{$current-ratio} and does not meet the ratio of #{$ratio}.";

    @error $message;
  }

  @return true;
}

@function tint($hue, $amount: 50%) {
  @return mix($hue, v.$white, $amount);
}

@function shade($hue, $amount: 50%) {
  @return mix($hue, v.$black, $amount);
}
